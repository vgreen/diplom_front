{"version":3,"sources":["AppMain/Home/TopMenu/index.tsx","AppMain/components/Table/index.tsx","AppMain/utils/defaultFunctions.ts","AppMain/utils/Dictionaries.ts","AppMain/utils/csvMaker.ts","AppMain/Home/PageHolder/assets/download.svg","AppMain/components/Diagramm/index.tsx","AppMain/components/Select/index.tsx","AppMain/components/InputM/index.tsx","AppMain/components/Menu/index.tsx","AppMain/Home/PageHolder/pages/AgeStatistic.tsx","AppMain/Home/PageHolder/pages/SexStatistic.tsx","AppMain/Home/PageHolder/pages/RegionStatistic.tsx","AppMain/Home/PageHolder/pages/semPologenie.tsx","AppMain/Home/PageHolder/pages/DiagnoseStatistic.tsx","AppMain/Home/PageHolder/pages/PatientTablePsy.tsx","AppMain/components/AreaDiagramm/index.tsx","AppMain/components/statContainer/index.tsx","AppMain/Home/PageHolder/pages/PsySostStatistic.tsx","AppMain/Home/PageHolder/index.tsx","AppMain/Home/index.tsx","AppMain/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["TopMenu","setCurrentPage","this","props","style","width","height","textAlign","paddingTop","fontSize","background","className","onClick","React","Component","Table","counter","data","Object","keys","forEach","key","console","log","item","headers","map","i","values","first","rest","left_names","field","dateTransformer","date","split","reverse","join","departments","text","value","processRow","row","finalVal","j","length","innerValue","toString","Date","toLocaleString","result","replace","search","formatDataToCsvString","csvFile","csvStringMaker","blob","Blob","type","URL","createObjectURL","_extends","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","fill","_ref","svgRef","title","enableBackground","id","viewBox","xmlSpace","ref","ForwardRef","forwardRef","getRandomColor","Diagramm","dataKey","dataMax","data_2","x_label","y_label","margin","top","right","left","bottom","strokeDasharray","label","domain","angle","position","Select","items","defaultString","onChange","defaultValue","disabled","InputM","state","checked","checkValid","str","arr","Number","parseInt","getFullYear","setFlag","setState","handleBlur","e","onBlur","checkDate","mask","Menu","dateStartChange","dateEndChange","sendReq","depChange","AgeStatistic","dateStart","dateEnd","dep","normalizeAgeData","department","under18","age19","age22_24","age25_29","age30_34","age35_39","age40_44","age45_49","age50_54","age55_59","age60_64","age75","axios","method","url","then","response","catch","error","alert","start","end","href","download","SexStatistic","new_data","Gender","RegionStatistic","SemPologStatistic","DiagnoseStatistic","PatientTablePsy","AreaDiagramm","_data","prefix","reduce","obj","big_data","offset","stroke","noValueOption","newObj","StatContainer","data_in","data_out","name","queryTypes","PsySostStatistic","loading","sendReqForTable","PageHolder","getPages","component","renderPage","currentPageNumber","setData","dateS","dateE","currentPage","defaultProps","Home","num","Main","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f5053936.chunk.js","sourcesContent":["import React from 'react';\nimport './TopMenu.scss';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ntype TProps = {\n    setCurrentPage(a:number):void\n}\n\nclass TopMenu extends React.Component<TProps,{}> {\n\n\n\n    render(){\n        const { setCurrentPage } = this.props;\n        return(\n            <>\n                <div style={{width:'100%', height:'50px', textAlign:'center', paddingTop:'20px', fontSize:'20pt',\n                    background: 'aliceblue'}}>Статистика по состоянию базы до июня 2019</div>\n                <div className=\"WrapperTop\">\n                    <div className=\"ButtonLink\" onClick={() => setCurrentPage(0)}>По возрастам</div>\n                    <div className=\"ButtonLink\" onClick={() => setCurrentPage(2)}>По регионам</div>\n                    <div className=\"ButtonLink\" onClick={() => setCurrentPage(3)}>По полу</div>\n                    <div className=\"ButtonLink\" onClick={() => setCurrentPage(1)}>По шкалам псих.сост.</div>\n                    <div className=\"ButtonLink\" onClick={() => setCurrentPage(4)}>По семейному положению</div>\n                    <div className=\"ButtonLink\" onClick={() => setCurrentPage(5)}>По диагнозам</div>\n                </div>\n                <div className=\"WrapperTop\">\n                    <div className=\"ButtonLink\" onClick={() => setCurrentPage(6)}>Таблица показателей пациентов</div>\n                </div>\n            </>\n        );\n    }\n\n}\n\n\nexport default TopMenu;","import React from 'react';\nimport './Table.scss'\n\ninterface TProps {\n    data: any[],\n    headers?: string[],\n    left_names?: {\n        // @ts-ignore\n        [key:(string | number)]:string\n    }\n}\n\ntype TCounter = {\n    [key:string]:number\n}\n\nexport const Table = (props: TProps) => {\n\n    let counter:TCounter = {};\n    if(props.data[0]){\n\n        Object.keys(props.data[0]).forEach((key) => counter[key] = 0);\n        console.log(counter);\n        props.data.forEach((item) => {\n            Object.keys(item).forEach((key) => {\n                if(key !== 'department') counter[key] += +item[key]\n            })\n        });\n        console.log(counter);\n    }\n    return (\n        <table>\n            <tbody>\n            <tr className=\"Header\">\n                {\n                    props.data[0] &&\n                    (props.headers || Object.keys(props.data[0])).map((item, i) => {\n                        return (\n                            <th className=\"Cell\" key={i}>{item}</th>\n                        );\n                    })\n                }\n            </tr>\n            {\n                props.data.map((item, i) => {\n                    const values = Object.values(item),\n                        [first, ...rest] = values;\n                    return (\n                        <tr className=\"Row\" key={i}>\n                            <td className=\"LeftLabel\" key={i}> {\n                                //@ts-ignore\n                                !!props.left_names ? props.left_names[first] : first\n                            }</td>\n                            {rest.map((field, key) => <td className=\"Cell\" key={key}> {field}</td>)}\n                        </tr>\n                    );\n                })\n            }\n            <tr className=\"Row\">\n                {\n                    Object.keys(counter).map((item, i) => {\n                        if(item === 'department') return <td key={i} className=\"LeftLabel\"> Всего : </td>;\n                        else {\n                            return <td key={i} className=\"LeftLabel\"> {counter[item]}</td>\n                        }\n                    })\n                }\n            </tr>\n            </tbody>\n        </table>\n    );\n};\n\n","export const addDays = (date:any , numberOfDaysToAdd:number):Date => {\n    return date.setDate(date.getDate() + numberOfDaysToAdd);\n};\n\nexport const dateTransformer = (date: string): string => {\n    return date.split('-').reverse().join('-')\n};","export const departments = [\n    {\n        text: '1',\n        value:'1'\n    },\n    {\n        text: '2',\n        value:'2'\n    },\n    {\n        text: '3',\n        value:'3'\n    },\n    {\n        text: '4',\n        value:'4'\n    },\n    {\n        text: '5',\n        value: '5'\n    },\n    {\n        text: '6',\n        value: '6'\n    },\n    {\n        text: '7',\n        value: '7'\n    },\n    {\n        text: '8',\n        value: '8'\n    },\n    {\n        text: '9',\n        value: '9'\n    },\n    {\n        text: '10',\n        value: '10'\n    },\n    {\n        text: 'Все отделения',\n        value: ''\n    },\n\n];\n\n","const processRow = function (row: any) {\n    var finalVal = '';\n    for (var j = 0; j < row.length; j++) {\n        var innerValue = row[j] === null ? '' : row[j].toString();\n        if (row[j] instanceof Date) {\n            innerValue = row[j].toLocaleString();\n        }\n        var result = innerValue.replace(/\"/g, '\"\"');\n        if (result.search(/(\"|,|\\n)/g) >= 0)\n            result = '\"' + result + '\"';\n        if (j > 0)\n            finalVal += ',';\n        finalVal += result;\n    }\n    return finalVal + '\\n';\n};\n\nconst formatDataToCsvString = function (data: any[]): string {\n\n    let csvFile = '';\n    data.map((item) => Object.values(item)).forEach((item) => csvFile += processRow(item));\n    return csvFile;\n};\n\n\nexport const csvStringMaker = (data: any[], headers?: string[]) => {\n    if (data && data[0]) {\n        let blob = new Blob([processRow(headers || Object.keys(data[0])) + formatDataToCsvString(data)], {type: 'text/csv;charset=utf-8;'});\n        return URL.createObjectURL(blob);\n    }\n\n};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M473.843,204.112H373.625V50.018C373.625,22.505,351.121,0,323.608,0H189.576  c-27.512,0-50.017,22.505-50.017,50.018v154.095H38.155c-27.512,0-35.851,17.492-18.536,38.867l204.893,252.982  c17.317,21.384,45.647,21.384,62.962,0l204.907-252.982C509.696,221.604,501.355,204.112,473.843,204.112z\",\n  fill: \"#7F7F7F\"\n});\n\nvar SvgDownload = function SvgDownload(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    enableBackground: \"new 0 0 512 512\",\n    height: \"15px\",\n    id: \"Layer_1\",\n    viewBox: \"0 0 512 512\",\n    width: \"35px\",\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgDownload, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/download.f26833ef.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport './Diagramm.scss'\nimport { Bar, BarChart, CartesianGrid, Legend, Tooltip, XAxis, YAxis, } from 'recharts';\n\ntype TProps = {\n    data: any[],\n    data_2?: any[],\n    dataKey: string\n    dataMax?: number | string,\n    x_label?: string,\n    y_label?: string\n}\n\nfunction getRandomColor(i: number) {\n    const colors = [\n        '#8884d8',\n        '#f40c0a',\n        '#81d88a',\n        '#443dd8',\n        '#3cd849',\n        '#d8c514',\n        '#af0596',\n        '#8884d8',\n        '#f45152',\n        '#81d88a',\n        '#443dd8',\n        '#8f3448',\n        '#d8c514',\n        '#af0596',\n        '#8884d8',\n        '#f45152',\n        '#81d88a',\n        '#443dd8',\n        '#8f3448',\n        '#d8c514',\n        '#af0596'\n\n    ];\n    return colors[i];\n}\n\n\nexport const Diagramm = (props: TProps) => {\n    const { data, dataKey, dataMax, data_2, x_label, y_label } = props;\n\n    return (\n        <div className=\"Diagramm\">\n            <BarChart\n                width={1200}\n                height={500}\n                data={data}\n                margin={{\n                    top: 5, right: 30, left: 20, bottom: 5,\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis dataKey={dataKey} label={x_label ? x_label : ''}/>\n                <YAxis domain={[0, dataMax ? dataMax : 2000]} label={{value:y_label ? y_label : 'Количество человек' , angle: -90, position: 'insideLeft'}}/>\n                <Tooltip/>\n                <Legend/>\n                {data && data[0] &&\n                // eslint-disable-next-line array-callback-return\n                    Object.keys(data[0]).map((item, i) => {\n                        return item !== dataKey ? <Bar dataKey={item} key={i} fill={getRandomColor(i)} /> : null;\n                    })\n                }\n                {\n                    data_2 && data_2[0] &&\n                    Object.keys(data_2[0]).map((item, i) => {\n                        return item !== dataKey ? <Bar dataKey={item} key={i} fill={getRandomColor(i+1)} /> : null;\n                    })\n                }\n            </BarChart>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n        </div>\n    );\n};\n\n","import React, { Component } from 'react';\nimport './Select.scss'\n\n\ntype TItem = {\n    value:any,\n    text:string,\n};\n\ntype TProps = {\n    defaultString:string,\n    items:TItem[],\n    title:string,\n    onChange(e: any): any,\n};\n\nclass Select extends Component<TProps, {}> {\n\n\n    render() {\n        const { items, defaultString, title, onChange } = this.props;\n\n        return (\n            <div className='Select'>\n                <h2 className=\"Title\">{title}</h2>\n                <select defaultValue='255' onChange={onChange}>\n                    <option value='255' disabled>{defaultString}</option>\n                    {\n                        items.map((item,i) => {\n                            return(\n                                <option value={item.value} key={i}>{item.text}</option>\n                            );\n                        })\n                    }\n                </select>\n            </div>\n        );\n    }\n}\n\nexport default Select;","import React, { Component } from 'react';\nimport './InputM.scss'\nimport InputMask            from \"react-input-mask\";\n\ntype TProps = {\n    title: string,\n    onBlur(a: string): any,\n    checkDate: boolean,\n};\ntype TState = {\n    checked: boolean\n};\n\nclass InputM extends Component<TProps, TState> {\n\n    state = {\n        checked: true\n    };\n\n    checkValid = (str: string) => {\n        if (str.length === 10) {\n            const arr = str.split('-').map(i => Number.parseInt(i));\n            return arr[0] > 0 && arr[0] < 32\n                && arr[1] > 0 && arr[1] < 13\n                && arr[2] <= (new Date()).getFullYear()\n                && arr[2] > 1000\n        } else {\n            return false\n        }\n    };\n\n    setFlag = (str: string) => {\n        this.setState({\n            checked: this.checkValid(str)\n        })\n    };\n\n    handleBlur = (e: any) => {\n        const { onBlur } = this.props,\n            { checked } = this.state,\n            str = e.target.value;\n        if (str !== '') {\n            this.setFlag(str);\n            console.log(str + (new Date()).getFullYear());\n            if (checked) onBlur(str)\n        }\n    };\n\n    render() {\n        const { title, checkDate } = this.props,\n            { checked } = this.state;\n\n        return (\n            <div className='InputM'>\n                <h2 className=\"Title\">{title}</h2>\n                <InputMask className={checked ? 'normalInp' : 'errorInp'} mask=\"99-99-9999\" onBlur={this.handleBlur}/>\n                <p className={checked && checkDate ? 'NoMes' : 'Message'}> Неверно введена информация </p>\n            </div>\n        );\n    }\n}\n\nexport default InputM;","import React from 'react';\nimport './Menu.scss';\nimport Select from \"../../components/Select\";\nimport { departments } from \"../../utils\";\nimport InputM from \"../InputM\";\n\n\ntype TProps = {\n    dateStartChange(e: any): any,\n    dateEndChange(e: any): any,\n    depChange(e: any): any,\n    sendReq(): void,\n    checkDate: boolean\n}\n\n\nclass Menu extends React.Component<TProps, {}> {\n\n    f(e: any) {\n\n    }\n\n    render() {\n        const { dateStartChange, dateEndChange, sendReq, depChange, checkDate } = this.props;\n        return (\n            <div className=\"Menu\">\n                <div className=\"Wrapper\">\n                    <InputM title='Дата начала периода' onBlur={dateStartChange} checkDate={checkDate}/>\n                    <InputM title='Дата конца периода' onBlur={dateEndChange} checkDate={checkDate}/>\n                    <Select\n                        title='Отделение'\n                        items={departments}\n                        defaultString='Выберите отделение'\n                        onChange={depChange}\n                    />\n                    {false&&\n                    <Select\n                        title='Код диагноза'\n                        items={departments}\n                        defaultString='Выберите код диагноза'\n                        onChange={this.f}\n                    />}\n                </div>\n                <button className=\"submit\" onClick={sendReq}>Запустить выборку</button>\n            </div>\n        );\n    }\n\n}\n\n\nexport default Menu;","import React                               from 'react';\nimport axios                               from 'axios'\nimport './styles.scss'\nimport { Table }                           from \"../../../components/Table\";\nimport { csvStringMaker, dateTransformer } from \"../../../utils\";\nimport { ReactComponent as Download }      from '../assets/download.svg'\nimport { Diagramm }                        from \"../../../components/Diagramm\";\nimport Menu                                from \"../../../components/Menu\";\n\nexport type TState = {\n    data: Column[],\n    dateStart: string,\n    dateEnd: string,\n    dep: string,\n}\n\ntype Column = {\n    department: string,\n    under18: string,\n    age19: string,\n    age22_24: string,\n    age25_29: string,\n    age30_34: string,\n    age35_39: string,\n    age40_44: string,\n    age45_49: string,\n    age50_54: string,\n    age55_59: string,\n    age60_64: string,\n    age75: string,\n}\n\nconst headers = [\n    'Департамент',\n    'до 18',\n    '18 - 19',\n    '20 - 24',\n    '25 - 29',\n    '30 - 34',\n    '35 - 39',\n    '40 - 44',\n    '45 - 49',\n    '50 - 54',\n    '55 - 59',\n    '60 +',\n    '70 +',\n];\n\nclass AgeStatistic extends React.Component<{}, TState> {\n    state: TState = {\n        data: [],\n        dateStart: '2014-01-01',\n        dateEnd: '2018-01-01',\n        dep: '',\n    };\n\n    componentDidMount(): void {\n        this.sendReq();\n    }\n\n    componentDidUpdate(): void {\n        csvStringMaker(this.state.data);\n    }\n\n    normalizeAgeData = (data: any[]): Column[] => {\n        return data.map((item: any) => {\n            return {\n                department: item['department'],\n                under18: item['under18'],\n                age19: item['19'],\n                age22_24: item['20-24'],\n                age25_29: item['25-29'],\n                age30_34: item['30-34'],\n                age35_39: item['35-39'],\n                age40_44: item['40-44'],\n                age45_49: item['45-49'],\n                age50_54: item['50-54'],\n                age55_59: item['55-59'],\n                age60_64: item['60+'],\n                age75: item['70+'],\n            }\n        });\n    };\n\n    sendReq = (): void => {\n        const { dateStart, dateEnd, dep } = this.state;\n        axios({\n            method: 'post',\n            url: 'http://localhost:3001/ageStatistic/',\n            data: {\n                dateStart: dateStart,\n                dateEnd: dateEnd,\n                dep: dep,\n            }\n        })\n            .then((response) => {\n                console.log(response.data);\n                this.setState({\n                    data: this.normalizeAgeData(response.data)\n                });\n                console.log(this.state.data)\n            })\n            .catch(function (error) {\n                alert(error);\n            });\n\n\n    };\n\n    dateStartChange = (date: string) => {\n        this.setState({\n            dateStart: date !== '' ? dateTransformer(date) : '2014-01-01'\n        });\n\n    };\n\n    dateEndChange = (date: string) => {\n        this.setState({\n            dateEnd: date !== '' ? dateTransformer(date) : '2040-01-01'\n        })\n    };\n\n    checkDate(start: string, end: string): boolean {\n        if(start.replace(/\\D/,'') !== '' && end.replace('-', '') !== '')\n            return Number.parseInt(start.split('-').join('')) <= Number.parseInt(end.split('-').join(''))\n        else return true\n    }\n\n    depChange = (e: any) => {\n        this.setState({\n            dep: e.target.value.toString()\n        })\n    };\n\n    render() {\n\n        const { data, dateEnd, dateStart } = this.state;\n        return (\n            <div className=\"AgeStatistic\">\n                <Menu dateStartChange={this.dateStartChange}\n                      dateEndChange={this.dateEndChange}\n                      sendReq={this.sendReq}\n                      depChange={this.depChange}\n                      checkDate={this.checkDate(dateStart, dateEnd)}\n                />\n                <div className=\"LabelContainer\">\n                    <div className=\"header\">\n                        <h2 className=\"Label\">Статистика по возрастам</h2>\n                    </div>\n                    <a className={'LinkCsv'} href={csvStringMaker(data)} download=\"export.csv\">Загрузить <Download/>\n                    </a>\n                </div>\n                <Table\n                    data={data}\n                    headers={headers}\n                />\n                <div className=\"header\">\n                    <h2 className=\"Label\">Статистическая гистограмма по возрастам</h2>\n                </div>\n                <Diagramm data={data} dataKey={'department'} dataMax={1500}/>\n            </div>\n        );\n    }\n\n}\n\nexport default AgeStatistic;\n\n","import React                          from 'react';\nimport axios                          from 'axios'\nimport './styles.scss'\nimport { Table }                      from \"../../../components/Table\";\nimport { csvStringMaker }             from \"../../../utils/csvMaker\";\nimport { ReactComponent as Download } from '../assets/download.svg'\nimport { Diagramm }                   from \"../../../components/Diagramm\";\nimport { dateTransformer }            from \"../../../utils\";\nimport { TState } from './AgeStatistic';\nimport Menu from '../../../components/Menu';\n\nclass SexStatistic extends React.Component<{}, {}> {\n    public state: TState = {\n        data: [],\n        dateStart: '2014-01-01',\n        dateEnd: '2018-01-01',\n        dep: '',\n    };\n\n    sendReq = (): void => {\n        const { dateStart, dateEnd, dep } = this.state;\n        axios({\n            method: 'post',\n            url: 'http://localhost:3001/SexStatistic/',\n            data: {\n                dateStart: dateStart,\n                dateEnd: dateEnd,\n                dep: dep\n            }\n        })\n            .then((response) => {\n                console.log(response.data);\n                this.setState({\n                    data: response.data\n                });\n                console.log(this.state.data)\n            })\n            .catch(function (error) {\n                alert(error);\n            });\n\n\n    };\n\n    componentDidMount(): void {\n        this.sendReq();\n    }\n\n    dateStartChange = (date: string) => {\n        this.setState({\n            dateStart: dateTransformer(date)\n        });\n\n    };\n\n    dateEndChange = (date: string) => {\n        this.setState({\n            dateEnd: dateTransformer(date)\n        })\n    };\n\n    checkDate(start: string, end: string): boolean {\n        if(start.replace(/\\D/,'') !== '' && end.replace('-', '') !== '')\n            return Number.parseInt(start.split('-').join('')) <= Number.parseInt(end.split('-').join(''))\n        else return true\n    }\n\n    depChange = (e: any) => {\n        this.setState({\n            dep: e.target.value.toString()\n        })\n    };\n\n\n    render() {\n\n        const { data, dateStart, dateEnd } = this.state;\n        //todo VINESTY\n        const new_data = data.map((item:any) => {\n            const {Gender, ...rest} = item\n            return {\n                ...{Gender: !!Gender ? 'Мужской' : 'Женский'},\n                ...rest\n            }\n        })\n        return (\n            <div className=\"RegStatistic\">\n                <Menu dateStartChange={this.dateStartChange}\n                      dateEndChange={this.dateEndChange}\n                      sendReq={this.sendReq}\n                      depChange={this.depChange}\n                      checkDate={this.checkDate(dateStart, dateEnd)}\n                />\n                <div className=\"LabelContainer\">\n                    <div className=\"header\">\n                        <h2 className=\"Label\">Статистика по полу</h2>\n                    </div>\n                    <a className={'LinkCsv'} href={csvStringMaker(data)} download=\"export.csv\">Загрузить <Download/>\n                    </a>\n                </div>\n                {data ?\n                <Table\n                    left_names={\n                        {\n                            '1':'Мужской',\n                            '0': 'Женский'\n                        }\n                    }\n                    data={data}\n                /> : 'Загрузка...'}\n                <div className=\"header\">\n                    <h2 className=\"Label\">Статистическая диаграмма по полу</h2>\n                </div>\n                <Diagramm data={new_data} dataKey={'Gender'}/>\n            </div>\n        );\n    }\n\n}\n\n\nexport default SexStatistic;","import React                          from 'react';\nimport axios                          from 'axios'\nimport './styles.scss'\nimport { Table }                      from \"../../../components/Table\";\nimport { csvStringMaker }             from \"../../../utils/csvMaker\";\nimport { ReactComponent as Download } from '../assets/download.svg'\nimport { Diagramm }                   from \"../../../components/Diagramm\";\nimport { dateTransformer }            from \"../../../utils\";\nimport Menu                           from \"../../../components/Menu\";\n\n\ntype TState = {\n    data: any[],\n    dateStart: string,\n    dateEnd: string,\n    dep: string,\n}\n\nconst headers = [\n    'Код региона',\n    'Количество пациентов',\n];\n\nclass RegionStatistic extends React.Component<{}, TState> {\n    public state: TState = {\n        data: [],\n        dateStart: '2014-01-01',\n        dateEnd: '2018-01-01',\n        dep: '',\n    };\n\n    sendReq = (): void => {\n        const { dateStart, dateEnd, dep } = this.state;\n        axios({\n            method: 'post',\n            url: 'http://localhost:3001/regionStatistic/',\n            data: {\n                dateStart: dateStart,\n                dateEnd: dateEnd,\n                dep: dep\n            }\n        })\n            .then((response) => {\n                console.log(response.data);\n                this.setState({\n                    data: response.data\n                });\n                console.log(this.state.data)\n            })\n            .catch(function (error) {\n                alert(error);\n            });\n\n\n    };\n\n    componentDidMount(): void {\n        this.sendReq();\n    }\n\n    dateStartChange = (date: string) => {\n        this.setState({\n            dateStart: dateTransformer(date)\n        });\n\n    };\n\n    dateEndChange = (date: string) => {\n        this.setState({\n            dateEnd: dateTransformer(date)\n        })\n    };\n\n    checkDate(start: string, end: string): boolean {\n        if(start.replace(/\\D/,'') !== '' && end.replace('-', '') !== '')\n            return Number.parseInt(start.split('-').join('')) <= Number.parseInt(end.split('-').join(''))\n        else return true\n    }\n\n    depChange = (e: any) => {\n        this.setState({\n            dep: e.target.value.toString()\n        })\n    };\n\n\n    render() {\n\n        const { data, dateStart, dateEnd } = this.state;\n        return (\n            <div className=\"RegStatistic\">\n                <Menu dateStartChange={this.dateStartChange}\n                      dateEndChange={this.dateEndChange}\n                      sendReq={this.sendReq}\n                      depChange={this.depChange}\n                      checkDate={this.checkDate(dateStart, dateEnd)}\n                />\n                <div className=\"LabelContainer\">\n                    <div className=\"header\">\n                        <h2 className=\"Label\">Статистика по регионам</h2>\n                    </div>\n                    <a className={'LinkCsv'} href={csvStringMaker(data)} download=\"export.csv\">Загрузить <Download/>\n                    </a>\n                </div>{\n                data.length > 0 ?\n                <Table\n                    data={data}\n                    headers={headers}\n                />\n            :\n            <p>Загрузка .....</p>}\n                <div className=\"header\">\n                    <h2 className=\"Label\">Статистическая диаграмма по регионам</h2>\n                </div>\n                <Diagramm data={data.map((item, key )=> key !== 71 && key !== 75 && item)} dataKey={'region_code'} dataMax={100}/>\n            </div>\n        );\n    }\n\n}\n\nexport default RegionStatistic;\n\n","import React                               from 'react';\nimport axios                               from 'axios'\nimport './styles.scss'\nimport { Table }                           from \"../../../components/Table\";\nimport { csvStringMaker, dateTransformer } from \"../../../utils\";\nimport { ReactComponent as Download }      from '../assets/download.svg'\nimport { Diagramm }                        from \"../../../components/Diagramm\";\nimport Menu                                from \"../../../components/Menu\";\n\nexport type TState = {\n    data: Column[],\n    dateStart: string,\n    dateEnd: string,\n    dep: string,\n}\n\ntype Column = {\n    [key:string]:string\n}\n\nconst headers = [\n    'Департамент',\n    'Все',\n    'Холост',\n    'Гражданский брак',\n    'Женат/Замужем',\n    'Разведен',\n    'Вдовств.',\n    'Остальные'\n];\n\nclass SemPologStatistic extends React.Component<{}, TState> {\n    state: TState = {\n        data: [],\n        dateStart: '2014-01-01',\n        dateEnd: '2018-01-01',\n        dep: '',\n    };\n\n    componentDidMount(): void {\n        this.sendReq();\n    }\n\n    componentDidUpdate(): void {\n        csvStringMaker(this.state.data);\n    }\n\n\n    sendReq = (): void => {\n        const { dateStart, dateEnd, dep } = this.state;\n        axios({\n            method: 'post',\n            url: 'http://localhost:3001/semeinPologStatistic/',\n            data: {\n                dateStart: dateStart,\n                dateEnd: dateEnd,\n                dep: dep,\n            }\n        })\n            .then((response) => {\n                console.log(response.data);\n                this.setState({\n                    data: response.data\n                });\n                console.log(this.state.data)\n            })\n            .catch(function (error) {\n                alert(error);\n            });\n\n\n    };\n\n    dateStartChange = (date: string) => {\n        this.setState({\n            dateStart: date !== '' ? dateTransformer(date) : '2014-01-01'\n        });\n\n    };\n\n    dateEndChange = (date: string) => {\n        this.setState({\n            dateEnd: date !== '' ? dateTransformer(date) : '2040-01-01'\n        })\n    };\n\n    checkDate(start: string, end: string): boolean {\n        if(start.replace(/\\D/,'') !== '' && end.replace('-', '') !== '')\n            return Number.parseInt(start.split('-').join('')) <= Number.parseInt(end.split('-').join(''))\n        else return true\n    }\n\n    depChange = (e: any) => {\n        this.setState({\n            dep: e.target.value.toString()\n        })\n    };\n\n    render() {\n\n        const { data, dateEnd, dateStart } = this.state;\n        return (\n            <div className=\"semPologStatistic\">\n                <Menu dateStartChange={this.dateStartChange}\n                      dateEndChange={this.dateEndChange}\n                      sendReq={this.sendReq}\n                      depChange={this.depChange}\n                      checkDate={this.checkDate(dateStart, dateEnd)}\n                />\n                <div className=\"LabelContainer\">\n                    <div className=\"header\">\n                        <h2 className=\"Label\">Статистика по семейному положению</h2>\n                    </div>\n                    <a className={'LinkCsv'} href={csvStringMaker(data)} download=\"export.csv\">Загрузить <Download/>\n                    </a>\n                </div>\n                {data.length !== 0 ?\n                <Table\n                    data={data}\n                    headers={headers}\n                />\n                : <p>Загрузка.....</p>}\n                <div className=\"header\">\n                    <h2 className=\"Label\">Статистическая гистограмма по семейному положению</h2>\n                </div>\n                <Diagramm dataMax={4000} data={data} dataKey={'department'}/>\n            </div>\n        );\n    }\n\n}\n\nexport default SemPologStatistic;\n\n","import React from 'react';\nimport {csvStringMaker, dateTransformer} from \"../../../utils\";\nimport axios from \"axios\";\nimport Menu from \"../../../components/Menu\";\nimport {ReactComponent as Download} from \"../assets/download.svg\";\nimport {Table} from \"../../../components/Table\";\nimport {Diagramm} from \"../../../components/Diagramm\";\nimport {TState} from \"./semPologenie\";\n\n\nclass DiagnoseStatistic extends React.Component<{}, {}> {\n    state: TState = {\n        data: [],\n        dateStart: '2014-01-01',\n        dateEnd: '2018-01-01',\n        dep: '',\n    };\n\n    componentDidMount(): void {\n        this.sendReq();\n    }\n\n    componentDidUpdate(): void {\n        csvStringMaker(this.state.data);\n    }\n\n\n    sendReq = (): void => {\n        const { dateStart, dateEnd, dep } = this.state;\n        axios({\n            method: 'post',\n            url: 'http://localhost:3001/diagnoseStatistic/',\n            data: {\n                dateStart: dateStart,\n                dateEnd: dateEnd,\n                dep: dep,\n            }\n        })\n            .then((response) => {\n                console.log(response.data);\n                this.setState({\n                    data: response.data\n                });\n                console.log(this.state.data)\n            })\n            .catch(function (error) {\n                alert(error);\n            });\n\n\n    };\n\n    dateStartChange = (date: string) => {\n        this.setState({\n            dateStart: date !== '' ? dateTransformer(date) : '2014-01-01'\n        });\n\n    };\n\n    dateEndChange = (date: string) => {\n        this.setState({\n            dateEnd: date !== '' ? dateTransformer(date) : '2040-01-01'\n        })\n    };\n\n    checkDate(start: string, end: string): boolean {\n        if(start.replace(/\\D/,'') !== '' && end.replace('-', '') !== '')\n            return Number.parseInt(start.split('-').join('')) <= Number.parseInt(end.split('-').join(''))\n        else return true\n    }\n\n    depChange = (e: any) => {\n        this.setState({\n            dep: e.target.value.toString()\n        })\n    };\n\n    render() {\n\n        const { data, dateEnd, dateStart } = this.state;\n        return (\n            <div className=\"diagnoseStatistic\">\n                <Menu dateStartChange={this.dateStartChange}\n                      dateEndChange={this.dateEndChange}\n                      sendReq={this.sendReq}\n                      depChange={this.depChange}\n                      checkDate={this.checkDate(dateStart, dateEnd)}\n                />\n                <div className=\"LabelContainer\">\n                    <div className=\"header\">\n                        <h2 className=\"Label\">Статистика по диагнозам</h2>\n                    </div>\n                    <a className={'LinkCsv'} href={csvStringMaker(data)} download=\"export.csv\">Загрузить <Download/>\n                    </a>\n                </div>\n                {data.length !== 0 ?\n                    <Table\n                        data={data}\n                    />\n                    : <p>Загрузка.....</p>}\n                <div className=\"header\">\n                    <h2 className=\"Label\">Статистическая гистограмма по диагнозам</h2>\n                </div>\n                <Diagramm data={data} dataKey={'code'} dataMax={700}/>\n            </div>\n        );\n    }\n}\n\nexport default DiagnoseStatistic;","import React from 'react';\nimport {csvStringMaker, dateTransformer} from \"../../../utils\";\nimport axios from \"axios\";\nimport Menu from \"../../../components/Menu\";\nimport {ReactComponent as Download} from \"../assets/download.svg\";\nimport {Table} from \"../../../components/Table\";\nimport {TState} from \"./semPologenie\";\n\n\nclass PatientTablePsy extends React.Component<{}, {}> {\n    state: TState = {\n        data: [],\n        dateStart: '2018-01-31',\n        dateEnd: '2020-01-01',\n        dep: '',\n    };\n\n    componentDidMount(): void {\n        this.sendReq();\n    }\n\n    sendReq = (): void => {\n        const { dateStart, dateEnd, dep } = this.state;\n        axios({\n            method: 'post',\n            url: 'http://localhost:3001/patientsTable/',\n            data: {\n                dateStart: dateStart,\n                dateEnd: dateEnd,\n                dep: dep,\n            }\n        })\n            .then((response) => {\n                this.setState({\n                    data: response.data\n                });\n                console.log(this.state.data)\n            })\n            .catch(function (error) {\n                alert(error);\n            });\n\n\n    };\n\n    dateStartChange = (date: string) => {\n        this.setState({\n            dateStart: date !== '' ? dateTransformer(date) : '2018-01-31'\n        });\n\n    };\n\n    dateEndChange = (date: string) => {\n        this.setState({\n            dateEnd: date !== '' ? dateTransformer(date) : '2020-01-01'\n        })\n    };\n\n    checkDate(start: string, end: string): boolean {\n        if(start.replace(/\\D/,'') !== '' && end.replace('-', '') !== '')\n            return Number.parseInt(start.split('-').join('')) <= Number.parseInt(end.split('-').join(''))\n        else return true\n    }\n\n    depChange = (e: any) => {\n        this.setState({\n            dep: e.target.value.toString()\n        })\n    };\n\n    render() {\n\n        const { data, dateEnd, dateStart } = this.state;\n        return (\n            <>\n                <Menu dateStartChange={this.dateStartChange}\n                      dateEndChange={this.dateEndChange}\n                      sendReq={this.sendReq}\n                      depChange={this.depChange}\n                      checkDate={this.checkDate(dateStart, dateEnd)}\n                />\n                {!!data && data.length !== 0 ?\n                    <div className=\"diagnoseStatistic\">\n\n\n                        <div className=\"LabelContainer\">\n                            <div className=\"header\">\n                                <h2 className=\"Label\">Таблица показателей пациентов</h2>\n                            </div>\n                            <a className={'LinkCsv'} href={csvStringMaker(data)}\n                               download=\"export.csv\">Загрузить <Download/>\n                            </a>\n                        </div>\n\n                        <Table\n                            data={data}\n                        />\n                    </div>\n                    : <p>Загрузка.....</p>\n                }\n            </>\n        );\n    }\n}\n\nexport default PatientTablePsy;","import React from 'react';\nimport './Diagramm.scss'\nimport {Area, AreaChart, CartesianGrid, Legend, Tooltip, XAxis, YAxis,} from 'recharts';\n\ntype TProps = {\n    data: any[],\n    data_2: any[],\n    dataKey: string\n    dataMax?: number | string,\n    x_label: string,\n    y_label: string\n}\n\nfunction getRandomColor(i: number) {\n    const colors = [\n        '#f40c0a',\n        '#0407d8',\n        '#81d88a',\n        '#d87017',\n        '#3cd849',\n        '#d8c514',\n        '#af0596',\n        '#8884d8',\n        '#f45152',\n        '#81d88a',\n        '#443dd8',\n        '#8f3448',\n        '#d8c514',\n        '#af0596',\n        '#8884d8',\n        '#f45152',\n        '#81d88a',\n        '#4343d8',\n        '#d85986',\n        '#d89914',\n        '#19af34',\n        '#d31cd8',\n        '#f4e811',\n        '#1628d8',\n        '#7bd881',\n        '#e66709',\n        '#d8bb2d',\n        '#af0596',\n        '#8884d8',\n        '#33f47f',\n        '#d81926',\n        '#443dd8',\n        '#8f3448',\n        '#d8c514',\n        '#af0596'\n\n    ];\n    return colors[i];\n}\n\n\nexport const AreaDiagramm = (props: TProps) => {\n    const { data, dataKey, dataMax, data_2, x_label, y_label } = props;\n    let new_data;\n\n    const renameKeys = (_data:any, prefix:string) => {\n        return Object.keys(_data).reduce((obj:{[a:string]:any}, key:string) => {\n            obj[`${key + prefix}`] = +_data[key]\n            return obj;\n        }, {})\n    };\n\n    new_data = data && data.map(item => renameKeys(item, '_income'));\n\n    const big_data =  data_2 && new_data ? new_data.map((item:any, key:number) => Object.assign(item, data_2[key])) : data;\n    console.log(big_data);\n    return (\n        <div className=\"AreaDiagramm\">\n            <AreaChart\n                width={1200}\n                height={500}\n                data={big_data}\n                margin={{\n                    top: 5, right: 30, left: 20, bottom: 5,\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis dataKey={dataKey} label={{value:x_label, position: 'insideBottomRight', offset: 0}}/>\n                <YAxis domain={[0, dataMax ? dataMax : 2000]} label={{value:y_label, angle: -90, position: 'insideLeft'}}/>\n                <Tooltip/>\n                <Legend margin={{top:100}}/>\n                {\n                    data && data[0] &&\n                    // eslint-disable-next-line array-callback-return\n                    Object.keys(data[0]).map((item, i) => {\n                        if (item !== dataKey) return <Area dataKey={item+'_income'} key={i} fill={getRandomColor(i)} stroke={'red'}/>;\n                    })\n                }\n                {\n                    data_2 && data_2[0] &&\n                    Object.keys(data_2[0]).map((item, i) => {\n                        if (item !== dataKey) return <Area dataKey={item} key={i+'_out'} fill={getRandomColor(i+1)} stroke={'blue'}/>;\n                    })\n                }\n            </AreaChart>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n        </div>\n    );\n};\n\n","import {csvStringMaker} from \"../../utils\";\nimport {ReactComponent as Download} from \"../../Home/PageHolder/assets/download.svg\";\nimport {Table} from \"../Table\";\nimport {AreaDiagramm} from \"../AreaDiagramm\";\nimport React, { FunctionComponent } from 'react';\n\ninterface OwnProps {\n    data_in:any,\n    data_out:any,\n    headers: string[],\n    name: string\n}\n\nconst noValueOption = (obj:any) => {\n    if(obj){\n       let newObj = obj;\n        newObj['Value'] = null;\n        return newObj;\n    }\n}\n\ntype Props = OwnProps;\n\nconst StatContainer: FunctionComponent<Props> = ({data_in, data_out, headers, name}) => {\n\n  return (\n      <div className={'Stat_container'}>\n          <div className=\"LabelContainer\">\n              <div className=\"header\">\n                  <h2 className=\"Label\">{name} при поступлении</h2>\n              </div>\n              <a className={'LinkCsv'} href={csvStringMaker(data_in, headers)} download={`${name}_при_пост_export.csv`}>Загрузить <Download/>\n              </a>\n          </div>\n          {\n              data_in &&\n              data_in.length > 0 ?\n                  <Table\n                      data={data_in}\n                      headers={headers}\n                  />\n                  :\n                  <p>Загрузка .....</p>\n          }\n          <div className=\"LabelContainer\">\n              <div className=\"header\">\n                  <h2 className=\"Label\">{name} при выписке</h2>\n              </div>\n              <a className={'LinkCsv'} href={csvStringMaker(data_out, headers)} download={`${name}_при_вып_export.csv`}>Загрузить <Download/>\n              </a>\n          </div>\n          {\n              data_out &&\n              data_out.length > 0 ?\n                  <Table\n                      data={data_out}\n                      headers={headers}\n                  />\n                  :\n                  <p>Загрузка .....</p>\n          }\n          <div className=\"header\">\n              <h2 className=\"Label\">Статистическая диаграмма по {name}</h2>\n          </div>\n          <AreaDiagramm data={noValueOption(data_in)} data_2={noValueOption(data_out)} dataKey={'Value'} dataMax={400} x_label={'Показатель шкалы'} y_label={'Количество человек'}/>\n      </div>\n  );\n};\n\nexport default StatContainer;\n\n","import React from 'react';\nimport axios from 'axios'\nimport './styles.scss'\nimport {dateTransformer} from \"../../../utils\";\nimport Menu from \"../../../components/Menu\";\nimport StatContainer from \"../../../components/statContainer\";\n\n\ntype TState = {\n    data: {\n        [key:string]: any\n    },\n    dateStart: string,\n    dateEnd: string,\n    dep: string,\n    loading:boolean\n}\n\nconst headers = [\n    'Шкала',\n    '1 отделение',\n    '2 отделение',\n    '3 отделение',\n    '4 отделение',\n    '5 отделение',\n    '6 отделение',\n    '7 отделение',\n    '8 отделение',\n    '9 отделение',\n    '10 отделение',\n    '1 дн ст',\n    '2 дн ст',\n];\n\nconst queryTypes = [\n    'SB_in',\n    'SB_out',\n    'ST_in',\n    'ST_out',\n    'SG_in',\n    'SG_out',\n    'LT_in',\n    'LT_out'\n];\n\nclass PsySostStatistic extends React.Component<{}, TState> {\n    public state: TState = {\n        data: {\n        },\n        dateStart: '2014-01-01',\n        dateEnd: '2025-01-01',\n        dep: '',\n        loading: false\n    };\n\n    sendReq = () => {\n        queryTypes.forEach(item => {\n            this.sendReqForTable(item)\n        })\n    }\n\n    sendReqForTable = (type: string): void => {\n        const { dateStart, dateEnd, dep } = this.state;\n        this.setState({\n            loading:true\n        })\n        axios({\n            method: 'post',\n            url: 'http://localhost:3001/shkaliStatistic/',\n            data: {\n                dateStart: dateStart,\n                dateEnd: dateEnd,\n                dep: dep,\n                type: type\n            }\n        })\n            .then((response) => {\n                console.log(response.data);\n                // @ts-ignore\n                this.setState( ({ data }) =>({\n                    data:  {\n                        ...data,\n                        [type]:response.data\n                    },\n                    loading:false\n                }));\n                console.log(this.state.data)\n            })\n            .catch(function (error) {\n                alert(error);\n            });\n\n\n    };\n\n    componentDidMount(): void {\n        this.sendReq();\n    }\n\n    dateStartChange = (date: string) => {\n        this.setState({\n            dateStart: date !== '' ? dateTransformer(date) : '2010-01-01'\n        });\n\n    };\n\n    dateEndChange = (date: string) => {\n        this.setState({\n            dateEnd: date !== '' ? dateTransformer(date) : '2040-01-01'\n        })\n    };\n\n    checkDate(start: string, end: string): boolean {\n        if(start.replace(/\\D/,'') !== '' && end.replace('-', '') !== '')\n            return Number.parseInt(start.split('-').join('')) <= Number.parseInt(end.split('-').join(''))\n        else return true\n    }\n\n    depChange = (e: any) => {\n        this.setState({\n            dep: e.target.value.toString()\n        })\n    };\n\n\n    render() {\n\n        const { data, dateStart, dateEnd, loading } = this.state;\n        return (\n            <div className=\"PsySostStatistic\">\n                <Menu dateStartChange={this.dateStartChange}\n                      dateEndChange={this.dateEndChange}\n                      sendReq={this.sendReq}\n                      depChange={this.depChange}\n                      checkDate={this.checkDate(dateStart, dateEnd)}\n                />\n                {\n                    loading && <div style={{width:'100%', height:'50px', textAlign:'center', paddingTop:'20px'}}>{'Загрузка данных .....'}</div>\n                }\n                <StatContainer data_in={data['SB_in']} data_out={data['SB_out']} headers={headers} name={'Шкала Бека'}/>\n                <br/>\n                <StatContainer data_in={data['ST_in']} data_out={data['ST_out']} headers={headers} name={'Ситуационная тревога'}/>\n                <br/>\n                <StatContainer data_in={data['SG_in']} data_out={data['SG_out']} headers={headers} name={'Шкала Гамильтона'}/>\n                <br/>\n                <StatContainer data_in={data['LT_in']} data_out={data['LT_out']} headers={headers} name={'Личностная тревога'}/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n            </div>\n        );\n    }\n\n}\n\nexport default PsySostStatistic;\n\n","import React from 'react';\nimport './PageHolder.scss';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {\n    AgeStatistic,\n    DiagnoseStatistic,\n    RegionStatistic,\n    SexStatistic,\n    SemPologStatistic,\n    PatientTablePsy\n} from \"./pages\";\nimport PsySostStatistic from \"./pages/PsySostStatistic\";\n\ntype TProps = {\n    currentPage: number,\n}\n\n\nclass PageHolder extends React.Component< TProps,{}> {\n\n    static defaultProps={\n        currentPage: 0,\n    };\n\n    public state = {};\n\n    getPages = () => {\n        return[\n            {\n                component: <AgeStatistic/>\n            },\n            {\n                component:<PsySostStatistic/>\n            },\n            {\n                component:<RegionStatistic/>\n            },\n            {\n                component:<SexStatistic/>\n            },\n            {\n                component: <SemPologStatistic/>\n            },\n            {\n                component: <DiagnoseStatistic/>\n            },\n            {\n                component: <PatientTablePsy/>\n            },\n\n        ]\n    };\n\n    renderPage = (currentPageNumber:number) => {\n        const pages = this.getPages();\n        return pages[currentPageNumber].component\n    };\n\n    setData = (dateStart: string, dateEnd: string, dep: string) => {\n        this.setState({\n            data: {\n                dateS: dateStart,\n                dateE: dateEnd,\n                dep: dep\n            }\n        })\n    };\n\n    render(){\n        const {currentPage} = this.props;\n        return(\n\n            <div className=\"PageHolder\">\n               { this.renderPage(currentPage) }\n            </div>\n        );\n    }\n\n}\n\n\nexport default PageHolder;","import React from 'react';\nimport TopMenu from \"./TopMenu\";\nimport PageHolder from \"./PageHolder\";\nimport './Home.scss'\n\nclass Home extends React.Component<{}, {}> {\n    public state = {\n        currentPage: 0,\n\n    };\n\n\n    setCurrentPage = (num:number) => {\n        this.setState({\n            currentPage:num,\n        })\n    };\n\n\n    render(){\n        const {currentPage} = this.state;\n        return(\n            <div className=\"Home\">\n                <TopMenu setCurrentPage={this.setCurrentPage}/>\n                <div className=\"content\">\n\n                    <PageHolder currentPage={currentPage}/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Home;\n","import React from 'react';\nimport Home from './Home';\n\nclass Main extends React.Component<{}, {}> {\n\n    render(){\n        return(\n            <Home/>\n        );\n    }\n\n}\n\nexport default Main;\n","import React from 'react';\nimport './App.css';\nimport Home from './AppMain';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}